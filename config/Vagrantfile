#
# Author:: Seth Chisamore (<schisamo@opscode.com>)
# Copyright:: Copyright (c) 2012 Opscode, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'test-kitchen'

tk_env = TestKitchen::Environment.new
tk_env.load!
tk_config = tk_env.config
project = tk_env.project

::Vagrant::Config.run do |vagrant_config|

  # Vagrant::Config callbacks
  # if vagrant_config_callbacks = TestKitchen::Vagrant.config_callbacks[:vagrant]
  #   vagrant_config_callbacks.each {|c| c.call(tk_config, vagrant_config) }
  # end

  tk_env.platforms.values.each do |platform|

    platform.versions.values.each do |version|

      name = "#{platform.name}-#{version.name}"

      vagrant_config.vm.define name do |vm_config|

        host_name = name.gsub(/\./, '-')

        vm_config.vm.customize [
          "modifyvm", :id,
          "--name", host_name,
          "--memory", "512",
          "--cpus", "1",
          "--usb", "off",
          "--usbehci", "off",
          "--audio", "none",
          "--natdnsproxy1", "on"
        ]

        vm_config.vm.host_name = host_name
        vm_config.vm.box = version.box
        vm_config.vm.box_url = version.box_url

        # Enable SSH agent forwarding for git clones
        vm_config.ssh.forward_agent = true

        # share Chef::Config[:file_cache_path] between VMs and provisions
        vm_config.vm.share_folder "cache", "/tmp/cache", tk_env.cache_path
        # mount the local code checkout up in the VM for testing
        vm_config.vm.share_folder "project", project.guest_source_root, project.root_path

        # VM callbacks
        # if vm_config_callbacks = TestKitchen::Vagrant.config_callbacks[:vm]
        #   vm_config_callbacks.each {|c| c.call(tk_config, vm_config) }
        # end

        # default chef attribute json
        chef_json = {
            'test-kitchen' => {
              'project' => project.to_hash.merge(
                'source_root' => project.guest_source_root,
                'test_root' => project.guest_test_root
              ),
              'lxc-image-urls' => Hash[*tk_env.all_platforms.map do |key, value|
                [key, value.lxc_url] if value.lxc_url
              end.flatten.compact]
            },
          }

        # Chef-Solo attribute data JSON callbacks
        # if chef_json_callbacks = TestKitchen::Vagrant.config_callbacks[:chef_json]
        #   chef_json_callbacks.each {|c| c.call(chef_json, tk_config, vm_config) }
        # end

        vm_config.vm.provision :chef_solo do |chef|
          chef.provisioning_path = "/tmp/cache"
          chef.cookbooks_path = tk_env.cookbook_paths
          chef.run_list = project.run_list
          chef.json = chef_json
        end

      end

    end
  end

end
